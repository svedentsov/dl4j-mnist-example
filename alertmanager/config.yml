global:
  # URL для Slack-интеграции. Замените на реальный.
  # slack_api_url: '<your_slack_webhook_url>'
  # Алерт считается разрешенным (resolved), если уведомление о его разрешении
  # не пришло в течение 5 минут после последнего уведомления о срабатывании.
  resolve_timeout: 5m

# Шаблоны для кастомизации уведомлений. Можно вынести в отдельный файл.
# Позволяют создавать красивые и информативные сообщения для Slack, Email и т.д.
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Конфигурация маршрутизации алертов. Это сердце Alertmanager.
route:
  # Корневой маршрут, на который попадают все алерты без исключения.
  receiver: 'default-receiver'
  # Группировка алертов по имени и источнику (job).
  # Это ключевой механизм для предотвращения "шторма" уведомлений.
  # Например, если 10 инстансов одного сервиса упадут, вы получите 1 уведомление, а не 10.
  group_by: [ 'alertname', 'job' ]
  # Время ожидания перед отправкой первого уведомления для новой группы алертов.
  # Позволяет собрать несколько связанных алертов (например, 'ServiceDown' и 'HighLatency') в одно уведомление.
  group_wait: 30s
  # Интервал времени, в течение которого новые алерты с теми же метками группировки
  # будут добавляться в уже существующую (отправленную) группу.
  group_interval: 5m
  # Интервал для повторной отправки уведомления, если алерт все еще активен.
  repeat_interval: 4h

  # Дочерние маршруты для специальной обработки. Alertmanager проверяет их по порядку.
  routes:
    # Маршрут для критических алертов.
    - receiver: 'critical-alerts'
      # Условие срабатывания: метка 'severity' равна 'critical'.
      matchers:
        - severity = 'critical'
      # Если алерт соответствует этому маршруту, его обработка прекращается, и он не пойдет
      # в другие маршруты или в корневой receiver.
      continue: false

    # Маршрут для предупреждающих алертов.
    - receiver: 'warning-alerts'
      matchers:
        - severity = 'warning'
      # `continue` здесь не указан, поэтому по умолчанию `false`.

# Конфигурация получателей (receivers) уведомлений.
receivers:
  - name: 'default-receiver'
    # Это "корзина" для всех алертов, которые не подошли под более специфичные маршруты.
    # Можно настроить на отправку в лог-систему или на почту с низким приоритетом.
    webhook_configs:
      - url: 'http://localhost:5001/default' # Пример URL, который может обрабатывать алерты
        send_resolved: true # Отправлять уведомление, когда алерт разрешился.

  - name: 'critical-alerts'
    # Канал для критически важных уведомлений, требующих немедленной реакции.
    # В реальной жизни здесь мог бы быть PagerDuty, SMS-шлюз или специальный канал в Slack.
    # pagerduty_configs:
    #   - routing_key: <your_pagerduty_routing_key>
    webhook_configs:
      - url: 'http://localhost:5001/critical'
        send_resolved: true

  - name: 'warning-alerts'
    # Канал для предупреждений. Может быть обычным каналом в Slack или email-рассылкой для дежурной команды.
    webhook_configs:
      - url: 'http://localhost:5001/warning'
        send_resolved: true
